ID : must be an unique number >0 for each kind of object (Building, research...). 
	Have generally at last 2 digit where the tens refer to the path and the units to it's lvl.
		 (except when multiple object have the same path and lvl)

Kind :  Refer to the Kind of the thing you have/need :
	object : 	
		Building = 1,
		Worker = 2,
		Slave_Worker = 3,
		Slave_Humanoid = 4,
		Slave_Animal = 5,
		Animal = 6,
		
		Human = 7,				// workers + slaves worker
		MasterAndCaptive = 8,	// workers + slaves humanoids
		MasterAndCreature = 9,	// workers + slaves animals
		Original_Farm = 10,		// workers + animals
		Natural_Slave = 11,		// slaves worker + slaves humanoids
		Earthling_Slave = 12,	// slaves worker + slaves animals
		NatEarthCattle = 13,	// slaves worker + animals
		Forced_Slave = 14,		// slaves humanoids + slaves animals
		Familiar = 15,			// slaves humanoids + animals
		Pet = 16,				// slaves animals + animals
		
		Semi_Human = 17,		// workers + slaves worker + slaves humanoids
		Earthling_People = 18,	// workers + slaves worker + slaves animals
		Natural_Earthling = 19,	// workers + slaves worker + animals
		MasterAndSlave = 20,	// workers + slaves humanoids + slaves animals
		MasterAndFamiliar = 21,	// workers + slaves humanoids + animals
		MasterAndPet = 22,		// workers + slaves animals + animals
		Slaves = 23,			// slaves worker + slaves humanoids + slaves animals
		Natural_Cattle = 24,	// slaves worker + slaves humanoids + animals
		Earthling_Cattle = 25,	// slaves worker + slaves animals + animals
		Forced_Cattle = 26,		// slaves humanoids + slaves animals + animals			
		
		People = 27,			// workers + slaves worker + slaves humanoids + slaves animals
		Natural_Being = 28,		// workers + slaves worker + slaves humanoids + animals
		Earthling_Being = 29,	// workers + slaves worker + slaves animals + animals
		MasterAndCattle = 30,	// workers + slaves humanoids + slaves animals + animals
		Cattle = 31,			// slaves worker + slaves humanoids + slaves animals + animals
		
		Living_Being = 32,		// workers + slaves worker + slaves humanoids + slaves animals + animals	
		Economic_Agent = 33,	// Building + workers
	intel : 1 (research), 2 (upgrade), 3 (synergy), 4 (ascension), 5 (event).
	both : 0(None), 49 (All)

Tree :  Refer to the development tree in which you can have the object : 
	object : 1 (neutral), 2 (science) or 3 (magic).
	need/check : 0 (all path), 5 (neutral & science), 6 (neutral & magic) or 7 (science & magic).

lvl : refer to the difficulty of the object, some price or requirement check this value, x>0, generally between 1 & 7.

start : Not needed for intel, indicate if they're enabled by default (0=no, 1=yes).
	Not needed for things, quantity of the object you get at the start of the game. Generally used for building (or debug).
	Required for toggle, it indicate the default option.
	This value can be altered by ascension.

get : Generally used with event, it inform how to get things : 
	get=-1 you must catch it. (event related).
	get=0 the thing must be bought. (default value).
	get=1 you must catch it, then buy it. (event related).

sell : generally hidden, this value is a % of the buy cost.
	default value are : building:40% and animals:70%,
		Worker : -40%, dismissing a worker involve a cost... 
		slave : 0%, they can be released, but selling them would be illegal ...for now.

price : what you must pay to get the object generally milk coin but can also contain sacrifice (Building, animals...).
	coef is a coefficient increasing the MilkCoin price depending of the number of object you have.


income : give an income of a fixed value (you must refer coin OR (production+quality))
	Productive : generally hidden, show if the object can produce coin (2), milk (1) or not (0/null). default value are : 
		Building & worker : 0/false, cattle : 1/true. But these value can be easily changed by upgrade ;)
	
bonus : change the total income by a % value  (you can refer any of the 3 like you want (generally only one is referred)

max : increase the maximum number of a population (Kind) of path y, by X.

Research, upgrade & synergy : the 3 xml are roughly the same but split for easier reading/modifying.
	Research are meant to unlock (building, worker...), they don't have <effect>.
	Upgrade are meant to have 1 effect (reduce price, increase production...), they have <effect> but no <effects>.
	synergy are meant to have multiple effect (like a boost b & b boost a...), they have <effects>.
Ascension is a "new game +" system where you can get special bonus (direct boost, building, toggle, research, upgrade...).
When upgrade increase income or bonus the game take them as separate source (like 2 different building).
When an upgrade change the number of max worker/needed worker, the game add (or remove) the new value to the base value.
Lastly you can add a list of sacrifice in the upgrade in that case player will choose one in all the lists.
	